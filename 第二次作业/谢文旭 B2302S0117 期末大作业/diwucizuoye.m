data=[-49	0	36	1
-88	-40	38	1
-81	79	-37	0
-97	-50	-41	1
-32	70	-12	0
-74	80	23	0
38	-3	-3	1
-59	-27	-24	1
0	-25	46	1
-47	92	50	0
-44	87	-38	0
15	5	-28	1
23	25	24	1
-80	-40	6	1
83	7	27	1
-63	67	36	0
-51	-47	50	1
-82	-72	-45	1
42	-50	-41	0
43	54	4	1
-98	-18	27	1
49	-81	6	0
-15	-44	0	1
5	-4	28	1
81	-26	27	0
-39	94	-1	0
-67	-76	27	1
18	18	29	1
24	-82	3	0
26	-20	43	1
-38	-41	-37	1
-58	-4	44	1
-82	8	43	1
29	-90	-31	0
19	45	-11	1
-99	-90	48	1
83	79	31	1
-65	9	-15	1
39	-67	-39	0
-73	7	-31	1
-50	-3	-6	1
-15	-7	41	1
83	23	40	1
69	1	-26	1
24	-9	-29	1
-4	55	-11	1
88	77	26	1
13	-59	-16	1
74	7	-32	1
-36	-8	-26	1
-22	54	9	1
-27	66	-22	1
65	-60	-47	0
53	85	38	1
-14	94	-10	0
-42	19	4	1
-48	59	11	0
30	40	31	1
-8	59	-5	1
-57	-42	40	1
93	59	1	1
-10	-72	-11	1
41	55	29	1
62	-81	29	0
-60	97	-43	0
94	62	-45	1
68	-60	-16	0
94	75	22	1
-24	22	33	1
-99	25	30	0
72	-46	8	0
-68	61	-18	0
45	-94	26	0
-18	-81	-40	1
-39	61	-15	0
58	97	19	1
-86	-25	-21	1
79	72	27	1
13	14	-43	1
56	98	-2	1
-12	21	3	1
-31	-17	-30	1
33	-97	30	0
-25	86	-4	0
-57	-98	31	1
70	69	16	1
82	-61	-40	0
81	23	2	1
-100	-63	27	1
89	98	13	1
31	42	24	1
16	24	41	1
-67	30	44	0
-13	-94	32	1
-14	-26	50	1
71	18	-6	1
59	-12	9	1
20	-58	-1	1
9	-52	26	1
9	-73	33	1
-86	89	-25	0
30	22	-18	1
94	-100	-10	0
-29	92	-12	0
86	38	0	1
87	50	45	1
-11	-25	-26	1
80	64	48	1
-2	51	34	1
-87	-62	-42	1
-19	57	-38	1
-30	-7	30	1
5	8	23	1
-80	23	1	0
0	16	43	1
-52	64	-31	0
-84	4	8	1
-14	-64	-18	1
97	-26	-32	0
-28	-81	25	1
-53	32	-29	1
49	-20	-20	1
-62	35	33	0
96	73	13	1
97	94	-32	1
-45	-19	-36	1
83	93	45	1
8	-26	-40	1
-70	94	-35	0
-92	44	18	0
27	-35	-30	1
15	47	-8	1
-90	-92	33	1
-39	90	22	0
63	28	-33	1
-1	97	11	1
-77	-54	-44	1
60	44	-20	1
32	-54	-26	1
-73	-27	4	1
73	-58	-30	0
21	-57	9	1
30	-28	-16	1
62	45	11	1
-30	68	-27	0
72	-79	-17	0
90	-67	49	0
81	-51	19	0
-11	-22	33	1
-30	-76	44	1
76	-62	-38	0
34	-89	-39	0
44	25	-11	1
10	-49	1	1
4	-66	39	1
35	59	-40	1
79	21	45	1
73	-99	-34	0
-100	-19	18	1
-87	-84	37	1
-46	-6	-27	1
-74	-68	34	1
9	82	-43	1
-82	-9	35	1
-42	82	42	0
81	0	-18	1
38	78	8	1
36	23	-15	1
-73	87	43	0
-2	-61	3	1
-41	-27	-13	1
37	19	-4	1
78	55	-29	1
-92	53	24	0
93	-40	20	0
-62	40	40	0
30	-41	13	1
-66	-54	6	1
51	80	-26	1
-96	87	16	0
-72	96	3	0
-95	-53	49	1
-23	12	-18	1
20	42	-22	1
-53	-63	47	1
78	-90	-10	0
-79	-31	-2	1
44	21	21	1
3	-74	-6	1
-6	66	5	1
89	-21	-43	0
-30	-71	-17	1
-89	0	33	1
-70	-37	-34	1
-69	-71	12	1
28	100	32	1
-45	-89	-45	1
-45	-31	34	1
-44	79	12	0
13	-56	-27	1];
data1=data(1:150,:);
X1 = data1(:,1:3);
y1 = data1(:, 4);
% 变量m存储的是变量X的行数，在这里为100
% 变量n存储的是变量X的列数，在这里为4
[m,n] = size(X1);
% 在变量X后加一列“1”，便于后面使用矩阵运算简化步骤
X1 = [X1 ones(m, 1)];
% 初始化模型参数β=(ω,b)为0
beta = zeros(n+1, 1);
% 设置梯度下降迭代次数为1500次
iteration = 1500;
% 设置学习率为0.01
alpha = 0.01;
% 开始循环，用梯度下降更新参数
for iter = 1 : iteration
    z = X1 * beta;
    h = 1 ./ (1 + exp(-z));
    error = h - y1;
    graident = X1' * error;
    beta = beta - alpha / m * graident;
end
data2=data(151:200,:);
X2=data(:,1:3);
[m1,n1] = size(X2);
X2 = [X2 ones(m1, 1)];
Y2=data(:,4);
acc=0;
for i=1:50
    xx=X2(i,1:4);
    yy=Y2(i);
    finil=1/(1+exp(xx*beta));
    if finil>0.5 && yy==0
        acc=acc+1;
    end
    if finil<=0.5 && yy==1
        acc=acc+1;
    end
end
acc/50

